{
    "sourceFile": "core/EventBus.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732207229111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732207229110,
            "name": "Commit-0",
            "content": "// src/core/events/EventBus.js\r\n\r\nclass EventBus {\r\n    constructor() {\r\n        this.subscribers = new Map();\r\n    }\r\n\r\n    subscribe(event, callback) {\r\n        if (!this.subscribers.has(event)) {\r\n            this.subscribers.set(event, new Set());\r\n        }\r\n        this.subscribers.get(event).add(callback);\r\n\r\n        // Return unsubscribe function\r\n        return () => {\r\n            this.unsubscribe(event, callback);\r\n        };\r\n    }\r\n\r\n    unsubscribe(event, callback) {\r\n        if (this.subscribers.has(event)) {\r\n            this.subscribers.get(event).delete(callback);\r\n        }\r\n    }\r\n\r\n    publish(event, data) {\r\n        if (this.subscribers.has(event)) {\r\n            this.subscribers.get(event).forEach(callback => {\r\n                try {\r\n                    callback(data);\r\n                } catch (error) {\r\n                    console.error(`Error in event handler for ${event}:`, error);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Clear all subscribers for testing purposes\r\n    clear() {\r\n        this.subscribers.clear();\r\n    }\r\n}\r\n\r\nexport const eventBus = new EventBus();"
        }
    ]
}