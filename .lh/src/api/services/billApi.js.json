{
    "sourceFile": "src/api/services/billApi.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1733158412207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733158836455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+// src/api/services/billApi.js\r\n+import axios from 'axios';\r\n+import { BaseApiService } from '../base/BaseApiService.js';\r\n+import { API_CONFIG } from '../client/apiConfig.js';\r\n+\r\n+export class BillApi extends BaseApiService {\r\n+    constructor() {\r\n+        super(API_CONFIG.ENDPOINTS.BILL.BASE);\r\n+    }\r\n+\r\n+    async getQuoteDetails(systemSize) {\r\n+        try {\r\n+            const payload = { systemSize };\r\n+            console.log('Sending payload for quote:', payload);  // Log the payload\r\n+            const response = await axios.post('http://localhost:8000/api/quote/get/', payload, {\r\n+                headers: {\r\n+                    'Content-Type': 'application/json'\r\n+                }\r\n+            });\r\n+            console.log('Quote response:', response.data);  // Log the response data\r\n+            return response.data;\r\n+        } catch (error) {\r\n+            console.error('Error fetching quote:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+\r\n+    async getBillDetails(referenceNumber) {\r\n+        try {\r\n+            const url = `${API_CONFIG.ENDPOINTS.BILL.GET}/${referenceNumber}`;\r\n+            console.log('Fetching bill details from URL:', url);  // Log the full URL\r\n+            const response = await this.get(url);\r\n+            console.log('Full response:', response);  // Log the full response object\r\n+            console.log('Bill details:', response.data);  // Log the response data\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error fetching bill details:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+\r\n+//    async getConsumptionHistory(referenceNumber) {\r\n+//        return this.get(`${API_CONFIG.ENDPOINTS.BILL.GET}/${referenceNumber}/history`);\r\n+//}\r\n+\r\n+    async validateReferenceNumber(referenceNumber) {\r\n+        try {\r\n+            const payload = { referenceNumber };\r\n+            console.log('Sending payload:', payload);  // Log the payload\r\n+            const response = await axios.post('http://localhost:8000/api/bill/validate/', payload, {\r\n+                headers: {\r\n+                    'Content-Type': 'application/json'\r\n+                }\r\n+            });\r\n+            if (response.data.isValid) {\r\n+                console.log('Reference number is valid');\r\n+                console.log(response.data);\r\n+            } else {\r\n+                console.error('Reference number is invalid:', response.data.error);\r\n+            }\r\n+            return response.data;\r\n+        } catch (error) {\r\n+            console.error('Error validating reference number:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+    \r\n+}\r\n+\r\n+export const billApi = new BillApi();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733158847515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+// src/api/services/billApi.js\r\n+import axios from 'axios';\r\n+import { BaseApiService } from '../base/BaseApiService.js';\r\n+import { API_CONFIG } from '../client/apiConfig.js';\r\n+\r\n+export class BillApi extends BaseApiService {\r\n+    constructor() {\r\n+        super(API_CONFIG.ENDPOINTS.BILL.BASE);\r\n+    }\r\n+\r\n+    async getQuoteDetails(systemSize) {\r\n+        try {\r\n+            const payload = { systemSize };\r\n+            console.log('Sending payload for quote:', payload);  // Log the payload\r\n+            const response = await axios.post('http://localhost:8000/api/quote/get/', payload, {\r\n+                headers: {\r\n+                    'Content-Type': 'application/json'\r\n+                }\r\n+            });\r\n+            console.log('Quote response:', response.data);  // Log the response data\r\n+            return response.data;\r\n+        } catch (error) {\r\n+            console.error('Error fetching quote:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+\r\n+    async getBillDetails(referenceNumber) {\r\n+        try {\r\n+            const url = `${API_CONFIG.ENDPOINTS.BILL.GET}/${referenceNumber}`;\r\n+            console.log('Fetching bill details from URL:', url);  // Log the full URL\r\n+            const response = await this.get(url);\r\n+            console.log('Full response:', response);  // Log the full response object\r\n+            console.log('Bill details:', response.data);  // Log the response data\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error fetching bill details:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+\r\n+//    async getConsumptionHistory(referenceNumber) {\r\n+//        return this.get(`${API_CONFIG.ENDPOINTS.BILL.GET}/${referenceNumber}/history`);\r\n+//}\r\n+\r\n+    async validateReferenceNumber(referenceNumber) {\r\n+        try {\r\n+            const payload = { referenceNumber };\r\n+            console.log('Sending payload:', payload);  // Log the payload\r\n+            const response = await axios.post('http://localhost:8000/api/bill/validate/', payload, {\r\n+                headers: {\r\n+                    'Content-Type': 'application/json'\r\n+                }\r\n+            });\r\n+            if (response.data.isValid) {\r\n+                console.log('Reference number is valid');\r\n+                console.log(response.data);\r\n+            } else {\r\n+                console.error('Reference number is invalid:', response.data.error);\r\n+            }\r\n+            return response.data;\r\n+        } catch (error) {\r\n+            console.error('Error validating reference number:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+    \r\n+}\r\n+\r\n+export const billApi = new BillApi();\n\\ No newline at end of file\n"
                }
            ],
            "date": 1733158412207,
            "name": "Commit-0",
            "content": "// src/api/services/billApi.js\r\nimport { BaseApiService } from '../base/BaseApiService.js';\r\nimport { API_CONFIG } from '../client/apiConfig.js';\r\n\r\nexport class BillApi extends BaseApiService {\r\n    constructor() {\r\n        super(API_CONFIG.ENDPOINTS.BILL.BASE);\r\n    }\r\n\r\n    async analyzeBill(referenceNumber) {\r\n        return this.post(API_CONFIG.ENDPOINTS.BILL.ANALYZE, { referenceNumber });\r\n    }\r\n\r\n    async getBillDetails(referenceNumber) {\r\n        try {\r\n            const url = `${API_CONFIG.ENDPOINTS.BILL.GET}/${referenceNumber}`;\r\n            console.log('Fetching bill details from URL:', url);  // Log the full URL\r\n            const response = await this.get(url);\r\n            console.log('Full response:', response);  // Log the full response object\r\n            console.log('Bill details:', response.data);  // Log the response data\r\n            return response;\r\n        } catch (error) {\r\n            console.error('Error fetching bill details:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async getConsumptionHistory(referenceNumber) {\r\n        return this.get(`${API_CONFIG.ENDPOINTS.BILL.GET}/${referenceNumber}/history`);\r\n    }\r\n\r\n    async validateReferenceNumber(referenceNumber) {\r\n        try {\r\n            const response = await this.post(API_CONFIG.ENDPOINTS.BILL.VALIDATE, { referenceNumber });\r\n\r\n            // Return consistent structure\r\n            return {\r\n                isValid: response.data?.isValid ?? true,\r\n                referenceNumber: referenceNumber\r\n            };\r\n        } catch (error) {\r\n            console.error('Error validating reference number:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\n// Export a singleton instance\r\nexport const billApi = new BillApi();\r\n"
        }
    ]
}